name: logseq-xr

services:
  webxr-graph:
    build: .
    image: logseq-xr-image:latest
    container_name: logseq-xr-webxr
    read_only: false
    networks:
      logseq_net:
        aliases:
          - logseq-xr-webxr  # Explicit alias to match the service name in config.yml
      docker_ragflow:
        aliases:
          - webxr-client
    deploy:
      resources:
        limits:
          cpus: '16.0'
          memory: 64G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    ports:
      - "4000:4000"
    environment:
      - RUST_LOG=info
      - RUST_BACKTRACE=1
      - BIND_ADDRESS=0.0.0.0
      - NVIDIA_VISIBLE_DEVICES=0
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - RAGFLOW_BASE_URL=http://ragflow-server/v1/
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./settings.toml:/app/settings.toml:ro
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 4G
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "1g"
        max-file: "5"

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-tunnel
    volumes:
      - ./config.yml:/etc/cloudflared/config.yml:ro
    command: tunnel --loglevel info --config /etc/cloudflared/config.yml run
    restart: unless-stopped
    environment:
      - TUNNEL_ORIGIN_CERT=/etc/cloudflared/cert.pem
      - TUNNEL_METRICS=0.0.0.0:2000
      - TUNNEL_DNS_UPSTREAM=https://1.1.1.1/dns-query,https://1.0.0.1/dns-query
    env_file:
      - .env
    networks:
      logseq_net:
        aliases:
          - cloudflared  # Explicit alias for cloudflared
    depends_on:
      webxr-graph:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "cloudflared", "tunnel", "info"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  logseq_net:
    name: logseq-xr_logseq_net
    driver: bridge
  docker_ragflow:
    external: true  # Use existing RAGFlow network with correct name
