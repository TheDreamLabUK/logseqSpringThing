# Debug settings
[server_debug]
enabled = true                     # Master switch for server debug logging
enable_websocket_debug = false     # Enable detailed websocket debugging
enable_data_debug = false          # Enable data exchange debugging
log_binary_headers = false         # Log binary message headers
log_full_json = false             # Log complete JSON payloads

[client_debug]
enabled = false                    # Master switch for client debug logging
enable_websocket_debug = false     # Enable detailed websocket debugging
enable_data_debug = false          # Enable data exchange debugging
log_binary_headers = false         # Log binary message headers
log_full_json = false             # Log complete JSON payloads

[network]
domain = "localhost"               # Production domain is in dotenv
port = 3000                       # Port for backend server
bind_address = "0.0.0.0"          # bind to all interfaces for docker
enable_tls = false                # TLS is handled by Cloudflare tunnel
min_tls_version = ""              # Not needed since TLS is handled by Cloudflare
enable_http2 = false              # HTTP/2 is handled by Cloudflare
max_request_size = 10485760       # 10MB in bytes
enable_rate_limiting = true
rate_limit_requests = 100
rate_limit_window = 60
tunnel_id = "dummy"               # Cloudflare tunnel ID handled in dotenv

[websocket]
compression_enabled = true         # Enable WebSocket compression
compression_threshold = 1024       # Compress messages larger than 1KB
max_message_size = 100485760      # Maximum WebSocket message size (100MB)
update_rate = 5                   # Update rate in FPS (5fps)
heartbeat_interval = 15000        # Heartbeat interval in milliseconds
heartbeat_timeout = 60000         # Heartbeat timeout in milliseconds
max_connections = 1000            # Maximum concurrent WebSocket connections
reconnect_attempts = 3            # Number of reconnection attempts
reconnect_delay = 5000           # Delay between reconnection attempts (ms)
binary_chunk_size = 65536        # Size of binary message chunks (64KB)

[security]
enable_cors = false
allowed_origins = []
enable_csrf = false               # CSRF is handled by Cloudflare
csrf_token_timeout = 3600
session_timeout = 3600
cookie_secure = true
cookie_httponly = true
cookie_samesite = "Strict"
enable_security_headers = false    # Security headers are handled by Cloudflare
enable_request_validation = true
enable_audit_logging = true
audit_log_path = "/app/logs/audit.log"

[github]
token = "default_token"
owner = "default_owner"
repo = "default_repo"
base_path = "default_path"
rate_limit = true

[ragflow]
api_key = "default_ragflow_key"
base_url = "http://ragflow-server/v1/"  # Use Docker service name
timeout = 30
max_retries = 3

[perplexity]
api_key = "default_perplexity_key"
prompt = "You are an AI assistant for LogSeq knowledge summaries via perplexity API. Style: Informative, analytical, optimistic, critical, conversational, authoritative. Markdown: hierarchical headings (- #), minimal bold, italics for book titles, descriptive links [URL](text), images ![alt](path){:width height}, embeds {{type id}}, lists with '-', block refs [[title]], properties property:: value, code blocks ```lang``` and `inline code`, \r\n newlines, public:: true at start/end. UK spelling, introduce acronyms once, numeric citations, [[reference]] for sources, minimal emojis, parentheses for asides, collapsed:: true. Focus on emerging tech (decentralization, AI, XR), detail, credible sources, implications, examples, future-oriented. Adhere strictly, ensure accuracy, consistency, large context, refine with feedback."
model = "llama-3.1-sonar-small-128k-online"
api_url = "https://api.perplexity.ai/chat/completions"
max_tokens = 4096
temperature = 0.5
top_p = 0.9
presence_penalty = 0.0
frequency_penalty = 1.0
timeout = 30
rate_limit = 100

[openai]
api_key = "default_openai_key"
base_url = "wss://api.openai.com/v1/realtime"
timeout = 30
rate_limit = 100
model = "gpt-4o-realtime-preview-2024-10-01"

[default]
max_concurrent_requests = 5
max_retries = 3
retry_delay = 5
api_client_timeout = 30
max_payload_size = 5242880       # 5MB in bytes
enable_request_logging = true     # Enable request logging for debugging
enable_metrics = true
metrics_port = 9090
log_level = "debug"              # Changed to debug for more verbose logging
log_format = "json"

[visualization]
# Colors in hex format - warm golden palette
node_color = "#FFA500"             # Base orange
edge_color = "#FFD700"             # Golden
hologram_color = "#FFC125"         # Deep golden yellow

# Node age-based colors - warm palette
node_color_new = "#FFD700"         # Bright gold for very recent files
node_color_recent = "#FFA500"      # Orange for recent files
node_color_medium = "#DAA520"      # Goldenrod for medium-age files
node_color_old = "#CD853F"         # Peru/bronze for old files
node_age_max_days = 30             # Maximum age in days for color calculation

# Node type colors
node_color_core = "#FFB90F"        # Dark golden for core nodes
node_color_secondary = "#FFC125"   # Golden yellow for secondary nodes
node_color_default = "#FFD700"     # Gold for default nodes

# Physical dimensions in meters
min_node_size = 0.15               # 15cm minimum node size
max_node_size = 0.4                # 40cm maximum node size
hologram_scale = 6.0               # Increased for better visibility
hologram_opacity = 0.15            # Slightly increased for better visibility
edge_opacity = 0.4                 # Increased for better visibility
label_font_size = 42               # Increased for better readability
fog_density = 0.001                # Reduced for clearer distant nodes

# Material properties - enhanced metallic look
node_material_metalness = 0.7      # High metallic for better reflection
node_material_roughness = 0.2      # Low roughness for shine
node_material_clearcoat = 0.8      # High clearcoat for glossiness
node_material_clearcoat_roughness = 0.1
node_material_opacity = 0.95
node_emissive_min_intensity = 0.4  # Good base glow
node_emissive_max_intensity = 1.0  # Strong maximum glow

# Label properties
label_font_family = "Arial"
label_padding = 24
label_vertical_offset = 2.5
label_close_offset = 0.25
label_background_color = "rgba(0, 0, 0, 0.85)"
label_text_color = "white"
label_info_text_color = "lightgray"
label_xr_font_size = 28

# Edge properties
edge_weight_normalization = 12.0   # Better visibility
edge_min_width = 1.5              # Clear minimum width
edge_max_width = 6.0              # Strong maximum width

# Geometry properties
geometry_min_segments = 24         # Smooth curves
geometry_max_segments = 48         # High detail for close objects
geometry_segment_per_hyperlink = 0.6

# Interaction properties
click_emissive_boost = 2.5        # Strong feedback
click_feedback_duration = 250      # Quarter second feedback

# Physics simulation parameters
force_directed_iterations = 300    # More iterations for better layout
force_directed_spring = 0.015     # Balanced spring force
force_directed_repulsion = 1200.0 # Strong repulsion
force_directed_attraction = 0.012  # Balanced attraction
force_directed_damping = 0.85     # Good stability

[bloom]
# Node bloom settings
node_bloom_strength = 1.5          # Strong but not overpowering
node_bloom_radius = 0.4           # Moderate spread
node_bloom_threshold = 0.2        # Balanced sensitivity

# Edge bloom settings
edge_bloom_strength = 1.2         # Visible but not dominant
edge_bloom_radius = 0.4          # Consistent with nodes
edge_bloom_threshold = 0.2       # Balanced sensitivity

# Environment bloom settings
environment_bloom_strength = 1.0   # Subtle ambient effect
environment_bloom_radius = 0.4    # Consistent spread
environment_bloom_threshold = 0.2  # Balanced sensitivity

[fisheye]
enabled = false
strength = 0.5
radius = 100.0
focus_x = 0.0
focus_y = 0.0
focus_z = 0.0
