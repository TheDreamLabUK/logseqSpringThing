pid /var/run/nginx/nginx.pid;
error_log /var/log/nginx/error.log debug;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Add TypeScript MIME types
    types {
        application/javascript js;
        application/javascript mjs;
        text/javascript js;
        text/javascript mjs;
    }

    # Logging
    log_format debug_format '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"'
                          ' ws_status="$upstream_http_upgrade"';  # Added WebSocket status logging

    access_log /var/log/nginx/access.log debug_format;

    # Optimization
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 120;  # Increased to match cloudflared keepAliveTimeout
    keepalive_requests 100;

    # Gzip settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream backend definition for the Rust server
    upstream backend {
        server 127.0.0.1:3001;  # Use loopback since both services are in same container
        keepalive 32;  # Match with cloudflared keepAliveConnections
    }

    # Main server configuration
    server {
        listen 4000 default_server;  # Listen on port 4000 for external connections
        server_name _;  # Accept any server name
        root /app/data/public/dist;  # Set root to built files directory

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "same-origin" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'; connect-src 'self' ws: wss: http: https:;" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # WebSocket endpoint with optimized settings
        location /wss {
            proxy_pass http://backend/wss;  # Added /wss to proxy_pass
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Match our WebSocket timeouts
            proxy_read_timeout 3600s;  # Match MAX_CLIENT_TIMEOUT
            proxy_send_timeout 3600s;  # Match MAX_CLIENT_TIMEOUT
            proxy_connect_timeout 30s;  # Match HEARTBEAT_INTERVAL
            
            # WebSocket specific optimizations
            proxy_buffering off;
            proxy_cache off;
            proxy_buffer_size 4k;

            # WebSocket error handling
            error_page 502 504 /50x.html;
            proxy_intercept_errors on;
            proxy_next_upstream error timeout;  # Retry on errors
            proxy_next_upstream_timeout 30s;    # Match HEARTBEAT_INTERVAL
            proxy_next_upstream_tries 3;        # Maximum retry attempts
        }

        # API endpoints
        location /api/ {
            proxy_pass http://backend/api/;  # Added trailing slash
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_connect_timeout 30s;  # Match HEARTBEAT_INTERVAL
            add_header Cache-Control "no-store" always;
        }

        # Graph endpoints
        location /graph/ {
            proxy_pass http://backend/graph/;  # Added trailing slash
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_connect_timeout 30s;  # Match HEARTBEAT_INTERVAL
            add_header Cache-Control "no-store" always;
        }

        # Static files with proper MIME types
        location /assets/ {
            expires 7d;
            add_header Cache-Control "public, no-transform" always;
            try_files $uri =404;
            access_log off;
        }

        # HTML files and default location
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "same-origin" always;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
